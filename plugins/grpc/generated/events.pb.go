// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

/*
Package eventforwarder is a generated protocol buffer package.

It is generated from these files:
	events.proto

It has these top-level messages:
	RoomStatus
	Room
	PlayerEvent
	Response
*/
package eventforwarder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomStatus_RoomStatusType int32

const (
	RoomStatus_ROOM_READY       RoomStatus_RoomStatusType = 0
	RoomStatus_ROOM_OCCUPIED    RoomStatus_RoomStatusType = 1
	RoomStatus_ROOM_TERMINATING RoomStatus_RoomStatusType = 2
	RoomStatus_ROOM_TERMINATED  RoomStatus_RoomStatusType = 3
)

var RoomStatus_RoomStatusType_name = map[int32]string{
	0: "ROOM_READY",
	1: "ROOM_OCCUPIED",
	2: "ROOM_TERMINATING",
	3: "ROOM_TERMINATED",
}
var RoomStatus_RoomStatusType_value = map[string]int32{
	"ROOM_READY":       0,
	"ROOM_OCCUPIED":    1,
	"ROOM_TERMINATING": 2,
	"ROOM_TERMINATED":  3,
}

func (x RoomStatus_RoomStatusType) String() string {
	return proto.EnumName(RoomStatus_RoomStatusType_name, int32(x))
}
func (RoomStatus_RoomStatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type PlayerEvent_PlayerEventType int32

const (
	PlayerEvent_PLAYER_JOINED PlayerEvent_PlayerEventType = 0
	PlayerEvent_PLAYER_LEFT   PlayerEvent_PlayerEventType = 1
)

var PlayerEvent_PlayerEventType_name = map[int32]string{
	0: "PLAYER_JOINED",
	1: "PLAYER_LEFT",
}
var PlayerEvent_PlayerEventType_value = map[string]int32{
	"PLAYER_JOINED": 0,
	"PLAYER_LEFT":   1,
}

func (x PlayerEvent_PlayerEventType) String() string {
	return proto.EnumName(PlayerEvent_PlayerEventType_name, int32(x))
}
func (PlayerEvent_PlayerEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type RoomStatus struct {
	Room       *Room                     `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	StatusType RoomStatus_RoomStatusType `protobuf:"varint,2,opt,name=statusType,enum=eventforwarder.RoomStatus_RoomStatusType" json:"statusType,omitempty"`
	Metadata   map[string]string         `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RoomStatus) Reset()                    { *m = RoomStatus{} }
func (m *RoomStatus) String() string            { return proto.CompactTextString(m) }
func (*RoomStatus) ProtoMessage()               {}
func (*RoomStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoomStatus) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *RoomStatus) GetStatusType() RoomStatus_RoomStatusType {
	if m != nil {
		return m.StatusType
	}
	return RoomStatus_ROOM_READY
}

func (m *RoomStatus) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Room struct {
	Game     string `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	RoomId   string `protobuf:"bytes,2,opt,name=roomId" json:"roomId,omitempty"`
	RoomType string `protobuf:"bytes,3,opt,name=roomType" json:"roomType,omitempty"`
	Host     string `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,5,opt,name=port" json:"port,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Room) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *Room) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Room) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *Room) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Room) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type PlayerEvent struct {
	PlayerId  string                      `protobuf:"bytes,1,opt,name=playerId" json:"playerId,omitempty"`
	Room      *Room                       `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
	EventType PlayerEvent_PlayerEventType `protobuf:"varint,3,opt,name=eventType,enum=eventforwarder.PlayerEvent_PlayerEventType" json:"eventType,omitempty"`
	Metadata  map[string]string           `protobuf:"bytes,4,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PlayerEvent) Reset()                    { *m = PlayerEvent{} }
func (m *PlayerEvent) String() string            { return proto.CompactTextString(m) }
func (*PlayerEvent) ProtoMessage()               {}
func (*PlayerEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PlayerEvent) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *PlayerEvent) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *PlayerEvent) GetEventType() PlayerEvent_PlayerEventType {
	if m != nil {
		return m.EventType
	}
	return PlayerEvent_PLAYER_JOINED
}

func (m *PlayerEvent) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Response struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RoomStatus)(nil), "eventforwarder.RoomStatus")
	proto.RegisterType((*Room)(nil), "eventforwarder.Room")
	proto.RegisterType((*PlayerEvent)(nil), "eventforwarder.PlayerEvent")
	proto.RegisterType((*Response)(nil), "eventforwarder.Response")
	proto.RegisterEnum("eventforwarder.RoomStatus_RoomStatusType", RoomStatus_RoomStatusType_name, RoomStatus_RoomStatusType_value)
	proto.RegisterEnum("eventforwarder.PlayerEvent_PlayerEventType", PlayerEvent_PlayerEventType_name, PlayerEvent_PlayerEventType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GRPCForwarder service

type GRPCForwarderClient interface {
	SendRoomStatus(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error)
	SendPlayerEvent(ctx context.Context, in *PlayerEvent, opts ...grpc.CallOption) (*Response, error)
}

type gRPCForwarderClient struct {
	cc *grpc.ClientConn
}

func NewGRPCForwarderClient(cc *grpc.ClientConn) GRPCForwarderClient {
	return &gRPCForwarderClient{cc}
}

func (c *gRPCForwarderClient) SendRoomStatus(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendRoomStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCForwarderClient) SendPlayerEvent(ctx context.Context, in *PlayerEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/eventforwarder.GRPCForwarder/SendPlayerEvent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GRPCForwarder service

type GRPCForwarderServer interface {
	SendRoomStatus(context.Context, *RoomStatus) (*Response, error)
	SendPlayerEvent(context.Context, *PlayerEvent) (*Response, error)
}

func RegisterGRPCForwarderServer(s *grpc.Server, srv GRPCForwarderServer) {
	s.RegisterService(&_GRPCForwarder_serviceDesc, srv)
}

func _GRPCForwarder_SendRoomStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendRoomStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendRoomStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendRoomStatus(ctx, req.(*RoomStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCForwarder_SendPlayerEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCForwarderServer).SendPlayerEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.GRPCForwarder/SendPlayerEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCForwarderServer).SendPlayerEvent(ctx, req.(*PlayerEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPCForwarder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventforwarder.GRPCForwarder",
	HandlerType: (*GRPCForwarderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRoomStatus",
			Handler:    _GRPCForwarder_SendRoomStatus_Handler,
		},
		{
			MethodName: "SendPlayerEvent",
			Handler:    _GRPCForwarder_SendPlayerEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "events.proto",
}

func init() { proto.RegisterFile("events.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xad, 0x1f, 0x29, 0xc9, 0x0d, 0x71, 0xcc, 0x25, 0x42, 0x56, 0xd8, 0x44, 0x5e, 0xb9, 0x42,
	0xca, 0xc2, 0x08, 0xa9, 0x82, 0x55, 0x14, 0x4f, 0x8b, 0xab, 0xe6, 0xa1, 0x69, 0x58, 0x74, 0x43,
	0x35, 0xe0, 0xa1, 0x48, 0xd4, 0x19, 0xcb, 0x9e, 0x06, 0xe5, 0x83, 0xf8, 0x28, 0xf6, 0x7c, 0x08,
	0x9a, 0xb1, 0x63, 0x9c, 0x02, 0x11, 0x1b, 0x76, 0xe7, 0xdc, 0xc7, 0xf1, 0xf1, 0x3d, 0xb2, 0xe1,
	0x31, 0xdf, 0xf0, 0xb5, 0x2c, 0xc6, 0x59, 0x2e, 0xa4, 0x40, 0x47, 0xb3, 0x4f, 0x22, 0xff, 0xca,
	0xf2, 0x84, 0xe7, 0xfe, 0x0f, 0x13, 0x80, 0x0a, 0x91, 0x5e, 0x49, 0x26, 0xef, 0x0b, 0x0c, 0xc0,
	0xce, 0x85, 0x48, 0x3d, 0x63, 0x64, 0x04, 0xdd, 0x70, 0x30, 0xde, 0x9f, 0x1e, 0xab, 0x49, 0xaa,
	0x27, 0x30, 0x06, 0x28, 0xf4, 0xce, 0x6a, 0x9b, 0x71, 0xcf, 0x1c, 0x19, 0x81, 0x13, 0x9e, 0xfc,
	0x69, 0xbe, 0x54, 0x6e, 0x40, 0xb5, 0x40, 0x1b, 0xcb, 0x18, 0x41, 0x3b, 0xe5, 0x92, 0x25, 0x4c,
	0x32, 0xcf, 0x1a, 0x59, 0x41, 0x37, 0x0c, 0x0e, 0x08, 0xcd, 0xaa, 0x51, 0xb2, 0x96, 0xf9, 0x96,
	0xd6, 0x9b, 0xc3, 0x37, 0xd0, 0xdb, 0x6b, 0xa1, 0x0b, 0xd6, 0x17, 0xbe, 0xd5, 0xaf, 0xd2, 0xa1,
	0x0a, 0xe2, 0x00, 0x5a, 0x1b, 0x76, 0x77, 0x5f, 0xda, 0xed, 0xd0, 0x92, 0xbc, 0x36, 0x4f, 0x0d,
	0xff, 0x3d, 0x38, 0xfb, 0x06, 0xd1, 0x01, 0xa0, 0x8b, 0xc5, 0xec, 0x86, 0x92, 0x49, 0x74, 0xed,
	0x1e, 0xe1, 0x13, 0xe8, 0x69, 0xbe, 0x98, 0x4e, 0xdf, 0x2d, 0x63, 0x12, 0xb9, 0x06, 0x0e, 0xc0,
	0xd5, 0xa5, 0x15, 0xa1, 0xb3, 0x78, 0x3e, 0x59, 0xc5, 0xf3, 0x73, 0xd7, 0xc4, 0xa7, 0xd0, 0xdf,
	0xab, 0x92, 0xc8, 0xb5, 0xfc, 0x0d, 0xd8, 0x4a, 0x1f, 0x11, 0xec, 0x5b, 0x96, 0xf2, 0xca, 0x94,
	0xc6, 0xf8, 0x0c, 0x8e, 0xd5, 0x45, 0xe3, 0xa4, 0xb2, 0x55, 0x31, 0x1c, 0x42, 0x5b, 0x21, 0x7d,
	0x5f, 0x4b, 0x77, 0x6a, 0xae, 0x74, 0x3e, 0x8b, 0x42, 0x7a, 0x76, 0xa9, 0xa3, 0xb0, 0xaa, 0x65,
	0x22, 0x97, 0x5e, 0x6b, 0x64, 0x04, 0x2d, 0xaa, 0xb1, 0xff, 0xdd, 0x84, 0xee, 0xf2, 0x8e, 0x6d,
	0x79, 0x4e, 0xd4, 0x41, 0x95, 0x66, 0xa6, 0x69, 0x9c, 0x54, 0x1e, 0x6a, 0x5e, 0x67, 0x6f, 0xfe,
	0x43, 0xf6, 0x1d, 0xdd, 0xac, 0xad, 0x39, 0xe1, 0x8b, 0x87, 0xe3, 0x8d, 0xa7, 0x36, 0xb1, 0x0e,
	0xff, 0xd7, 0x36, 0x92, 0x46, 0xf6, 0xb6, 0xce, 0xfe, 0xe4, 0x90, 0xd2, 0x7f, 0x09, 0xff, 0x15,
	0xf4, 0x1f, 0x38, 0x54, 0x69, 0x2f, 0x2f, 0x27, 0xd7, 0x84, 0xde, 0x5c, 0x2c, 0xe2, 0x39, 0x89,
	0xdc, 0x23, 0xec, 0x43, 0xb7, 0x2a, 0x5d, 0x92, 0xb3, 0x95, 0x6b, 0xf8, 0xa7, 0xd0, 0xa6, 0xbc,
	0xc8, 0xc4, 0xba, 0xd0, 0x79, 0x7c, 0x14, 0x49, 0x99, 0x6b, 0x8b, 0x6a, 0x8c, 0x1e, 0x3c, 0x4a,
	0x79, 0x51, 0xb0, 0xdb, 0xdd, 0x23, 0x77, 0x34, 0xfc, 0x66, 0x40, 0xef, 0x9c, 0x2e, 0xa7, 0x67,
	0xbb, 0x77, 0xc4, 0xb7, 0xe0, 0x5c, 0xf1, 0x75, 0xd2, 0xf8, 0x12, 0x87, 0x7f, 0xff, 0x04, 0x86,
	0xde, 0x6f, 0xbd, 0xca, 0x87, 0x7f, 0x84, 0x17, 0xd0, 0x57, 0x4a, 0xcd, 0xd0, 0x9f, 0x1f, 0xb8,
	0xe8, 0x21, 0xad, 0x0f, 0xc7, 0xfa, 0x9f, 0xf1, 0xf2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a,
	0x58, 0xac, 0xf0, 0x43, 0x04, 0x00, 0x00,
}
