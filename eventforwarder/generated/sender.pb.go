// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sender.proto

/*
Package eventforwarder is a generated protocol buffer package.

It is generated from these files:
	sender.proto

It has these top-level messages:
	RoomStatus
	PlayerStatus
	Response
*/
package eventforwarder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomStatus struct {
	Game   string `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	RoomId string `protobuf:"bytes,2,opt,name=roomId" json:"roomId,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *RoomStatus) Reset()                    { *m = RoomStatus{} }
func (m *RoomStatus) String() string            { return proto.CompactTextString(m) }
func (*RoomStatus) ProtoMessage()               {}
func (*RoomStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoomStatus) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *RoomStatus) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RoomStatus) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PlayerStatus struct {
	Game   string `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	RoomId string `protobuf:"bytes,2,opt,name=roomId" json:"roomId,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	UserId string `protobuf:"bytes,4,opt,name=userId" json:"userId,omitempty"`
}

func (m *PlayerStatus) Reset()                    { *m = PlayerStatus{} }
func (m *PlayerStatus) String() string            { return proto.CompactTextString(m) }
func (*PlayerStatus) ProtoMessage()               {}
func (*PlayerStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlayerStatus) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *PlayerStatus) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *PlayerStatus) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PlayerStatus) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Response struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RoomStatus)(nil), "eventforwarder.RoomStatus")
	proto.RegisterType((*PlayerStatus)(nil), "eventforwarder.PlayerStatus")
	proto.RegisterType((*Response)(nil), "eventforwarder.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Sender service

type SenderClient interface {
	SendRoomStatus(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error)
	SendPlayerStatus(ctx context.Context, in *PlayerStatus, opts ...grpc.CallOption) (*Response, error)
}

type senderClient struct {
	cc *grpc.ClientConn
}

func NewSenderClient(cc *grpc.ClientConn) SenderClient {
	return &senderClient{cc}
}

func (c *senderClient) SendRoomStatus(ctx context.Context, in *RoomStatus, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/eventforwarder.Sender/SendRoomStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senderClient) SendPlayerStatus(ctx context.Context, in *PlayerStatus, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/eventforwarder.Sender/SendPlayerStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Sender service

type SenderServer interface {
	SendRoomStatus(context.Context, *RoomStatus) (*Response, error)
	SendPlayerStatus(context.Context, *PlayerStatus) (*Response, error)
}

func RegisterSenderServer(s *grpc.Server, srv SenderServer) {
	s.RegisterService(&_Sender_serviceDesc, srv)
}

func _Sender_SendRoomStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SendRoomStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.Sender/SendRoomStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SendRoomStatus(ctx, req.(*RoomStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sender_SendPlayerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenderServer).SendPlayerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.Sender/SendPlayerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenderServer).SendPlayerStatus(ctx, req.(*PlayerStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventforwarder.Sender",
	HandlerType: (*SenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRoomStatus",
			Handler:    _Sender_SendRoomStatus_Handler,
		},
		{
			MethodName: "SendPlayerStatus",
			Handler:    _Sender_SendPlayerStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sender.proto",
}

func init() { proto.RegisterFile("sender.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0xcd, 0x4b,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4b, 0x2d, 0x4b, 0xcd, 0x2b, 0x49,
	0xcb, 0x2f, 0x2a, 0x4f, 0x2c, 0x4a, 0x49, 0x2d, 0x52, 0xf2, 0xe1, 0xe2, 0x0a, 0xca, 0xcf, 0xcf,
	0x0d, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x16, 0x12, 0xe2, 0x62, 0x49, 0x4f, 0xcc, 0x4d, 0x95, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0xf2, 0xf3, 0x73, 0x3d,
	0x53, 0x24, 0x98, 0xc0, 0xa2, 0x50, 0x1e, 0x48, 0x6d, 0x49, 0x65, 0x41, 0xaa, 0x04, 0x33, 0x44,
	0x2d, 0x88, 0xad, 0x94, 0xc6, 0xc5, 0x13, 0x90, 0x93, 0x58, 0x99, 0x5a, 0x44, 0x1d, 0xf3, 0x40,
	0x6a, 0x4b, 0x8b, 0x53, 0x8b, 0x3c, 0x53, 0x24, 0x58, 0x20, 0x6a, 0x21, 0x3c, 0x25, 0x15, 0x2e,
	0x8e, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2,
	0xe2, 0xc4, 0x74, 0x98, 0x35, 0x30, 0xae, 0xd1, 0x02, 0x46, 0x2e, 0xb6, 0x60, 0xb0, 0xe7, 0x85,
	0x3c, 0xb8, 0xf8, 0x40, 0x2c, 0x24, 0xaf, 0x4a, 0xe9, 0xa1, 0x86, 0x84, 0x1e, 0x42, 0x4e, 0x4a,
	0x02, 0x43, 0x0e, 0x6a, 0x99, 0x12, 0x83, 0x90, 0x0f, 0x97, 0x00, 0xc8, 0x24, 0x14, 0x6f, 0xca,
	0xa0, 0xab, 0x47, 0x96, 0xc5, 0x67, 0x5a, 0x12, 0x1b, 0x38, 0x56, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xe7, 0x1c, 0x17, 0xaa, 0xa5, 0x01, 0x00, 0x00,
}
