// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status.proto

/*
Package eventforwarder is a generated protocol buffer package.

It is generated from these files:
	status.proto

It has these top-level messages:
	Status
	Room
	Player
	Response
*/
package eventforwarder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Status) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Room struct {
	Game     string  `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	RoomId   string  `protobuf:"bytes,2,opt,name=roomId" json:"roomId,omitempty"`
	RoomType string  `protobuf:"bytes,3,opt,name=roomType" json:"roomType,omitempty"`
	Status   *Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Room) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *Room) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Room) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *Room) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Player struct {
	Game     string  `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	RoomId   string  `protobuf:"bytes,2,opt,name=roomId" json:"roomId,omitempty"`
	RoomType string  `protobuf:"bytes,3,opt,name=roomType" json:"roomType,omitempty"`
	UserId   string  `protobuf:"bytes,4,opt,name=userId" json:"userId,omitempty"`
	Status   *Status `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Player) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *Player) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Player) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *Player) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Player) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Response struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "eventforwarder.Status")
	proto.RegisterType((*Room)(nil), "eventforwarder.Room")
	proto.RegisterType((*Player)(nil), "eventforwarder.Player")
	proto.RegisterType((*Response)(nil), "eventforwarder.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StatusService service

type StatusServiceClient interface {
	SendRoomStatus(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Response, error)
	SendPlayerStatus(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Response, error)
}

type statusServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatusServiceClient(cc *grpc.ClientConn) StatusServiceClient {
	return &statusServiceClient{cc}
}

func (c *statusServiceClient) SendRoomStatus(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/eventforwarder.StatusService/SendRoomStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statusServiceClient) SendPlayerStatus(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/eventforwarder.StatusService/SendPlayerStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StatusService service

type StatusServiceServer interface {
	SendRoomStatus(context.Context, *Room) (*Response, error)
	SendPlayerStatus(context.Context, *Player) (*Response, error)
}

func RegisterStatusServiceServer(s *grpc.Server, srv StatusServiceServer) {
	s.RegisterService(&_StatusService_serviceDesc, srv)
}

func _StatusService_SendRoomStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Room)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServiceServer).SendRoomStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.StatusService/SendRoomStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServiceServer).SendRoomStatus(ctx, req.(*Room))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatusService_SendPlayerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServiceServer).SendPlayerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventforwarder.StatusService/SendPlayerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServiceServer).SendPlayerStatus(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventforwarder.StatusService",
	HandlerType: (*StatusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRoomStatus",
			Handler:    _StatusService_SendRoomStatus_Handler,
		},
		{
			MethodName: "SendPlayerStatus",
			Handler:    _StatusService_SendPlayerStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "status.proto",
}

func init() { proto.RegisterFile("status.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x5d, 0x8d, 0x6b, 0x3b, 0x6a, 0x91, 0x41, 0xc2, 0xd2, 0x53, 0x08, 0x1e, 0x7a, 0xca,
	0xa1, 0xbe, 0x81, 0x07, 0xa1, 0x37, 0x49, 0x7c, 0x81, 0xd5, 0x8c, 0x45, 0x30, 0xd9, 0x30, 0x9b,
	0x56, 0x7a, 0xf1, 0x39, 0x04, 0x5f, 0x56, 0xf6, 0x4f, 0x82, 0x56, 0x10, 0x0f, 0xde, 0xe6, 0xcb,
	0x37, 0x33, 0xdf, 0x8f, 0xc9, 0xc2, 0x99, 0xed, 0x75, 0xbf, 0xb1, 0x45, 0xc7, 0xa6, 0x37, 0x38,
	0xa3, 0x2d, 0xb5, 0xfd, 0x93, 0xe1, 0x57, 0xcd, 0x35, 0x71, 0x9e, 0x81, 0xac, 0xbc, 0x8f, 0x29,
	0xc8, 0xd0, 0xa9, 0x44, 0x26, 0x16, 0xd3, 0x32, 0xaa, 0xfc, 0x0d, 0x92, 0xd2, 0x98, 0x06, 0x11,
	0x92, 0xb5, 0x6e, 0x28, 0xba, 0xbe, 0x76, 0x33, 0x6c, 0x4c, 0xb3, 0xaa, 0xd5, 0x61, 0x98, 0x09,
	0x0a, 0xe7, 0x30, 0x71, 0xd5, 0xfd, 0xae, 0x23, 0x75, 0xe4, 0x9d, 0x51, 0x63, 0x31, 0xe6, 0x24,
	0x99, 0x58, 0x9c, 0x2e, 0xd3, 0xe2, 0x3b, 0x52, 0x11, 0x78, 0xc6, 0xfc, 0x77, 0x01, 0xf2, 0xee,
	0x45, 0xef, 0x88, 0xff, 0x0d, 0x21, 0x05, 0xb9, 0xb1, 0xc4, 0xab, 0xda, 0x23, 0x4c, 0xcb, 0xa8,
	0xbe, 0xa0, 0x1d, 0xff, 0x09, 0xed, 0x0a, 0x26, 0x25, 0xd9, 0xce, 0xb4, 0x96, 0x50, 0xc1, 0x49,
	0x43, 0xd6, 0xea, 0xf5, 0x80, 0x37, 0xc8, 0xe5, 0x87, 0x80, 0xf3, 0x30, 0x58, 0x11, 0x6f, 0x9f,
	0x1f, 0x09, 0x6f, 0x60, 0x56, 0x51, 0x5b, 0xbb, 0xb3, 0xc6, 0xe3, 0x5f, 0xee, 0x27, 0x39, 0x6f,
	0xae, 0x7e, 0x7c, 0x8d, 0x69, 0xf9, 0x01, 0xde, 0xc2, 0x85, 0xdb, 0x11, 0x2e, 0x33, 0xfc, 0xc2,
	0xfd, 0xfe, 0xe0, 0xfe, 0xb6, 0xe7, 0x41, 0xfa, 0x77, 0x71, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff,
	0xe3, 0x81, 0x8c, 0x69, 0x27, 0x02, 0x00, 0x00,
}
