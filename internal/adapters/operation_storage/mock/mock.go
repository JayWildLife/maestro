// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/ports/operation_storage.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	operation "github.com/topfreegames/maestro/internal/core/entities/operation"
)

// MockOperationStorage is a mock of OperationStorage interface.
type MockOperationStorage struct {
	ctrl     *gomock.Controller
	recorder *MockOperationStorageMockRecorder
}

// MockOperationStorageMockRecorder is the mock recorder for MockOperationStorage.
type MockOperationStorageMockRecorder struct {
	mock *MockOperationStorage
}

// NewMockOperationStorage creates a new mock instance.
func NewMockOperationStorage(ctrl *gomock.Controller) *MockOperationStorage {
	mock := &MockOperationStorage{ctrl: ctrl}
	mock.recorder = &MockOperationStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationStorage) EXPECT() *MockOperationStorageMockRecorder {
	return m.recorder
}

// CreateOperation mocks base method.
func (m *MockOperationStorage) CreateOperation(ctx context.Context, operation *operation.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOperation", ctx, operation)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOperation indicates an expected call of CreateOperation.
func (mr *MockOperationStorageMockRecorder) CreateOperation(ctx, operation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOperation", reflect.TypeOf((*MockOperationStorage)(nil).CreateOperation), ctx, operation)
}
