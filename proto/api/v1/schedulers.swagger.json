{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/schedulers.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SchedulersService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/schedulers": {
      "get": {
        "summary": "Lists all schedulers.",
        "operationId": "SchedulersService_ListSchedulers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSchedulersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SchedulersService"
        ]
      },
      "post": {
        "summary": "Create a scheduler.",
        "operationId": "SchedulersService_CreateScheduler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSchedulerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSchedulerRequest"
            }
          }
        ],
        "tags": [
          "SchedulersService"
        ]
      }
    },
    "/schedulers/{schedulerName}": {
      "get": {
        "summary": "Get Specific Scheduler by name",
        "operationId": "SchedulersService_GetScheduler",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSchedulerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Scheduler name where the rooms will be added.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Scheduler version to be queried (query param).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SchedulersService"
        ]
      }
    },
    "/schedulers/{schedulerName}/add-rooms": {
      "post": {
        "summary": "Given a amount, add rooms to a scheduler.",
        "operationId": "SchedulersService_AddRooms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddRoomsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Scheduler name where the rooms will be added.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Amount of rooms to be added."
                }
              },
              "description": "Add rooms operation request payload + path parameters."
            }
          }
        ],
        "tags": [
          "SchedulersService"
        ]
      }
    },
    "/schedulers/{schedulerName}/remove-rooms": {
      "post": {
        "summary": "Given a amount, remove rooms of a scheduler.",
        "operationId": "SchedulersService_RemoveRooms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveRoomsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Scheduler name from which the rooms will be removed.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Amount of rooms to be removed."
                }
              },
              "description": "Remove rooms operation request payload + path parameters."
            }
          }
        ],
        "tags": [
          "SchedulersService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddRoomsResponse": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Add rooms operation ID, further this id will be used to consult its state."
        }
      },
      "description": "Add rooms operation response payload, empty."
    },
    "v1Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the container."
        },
        "image": {
          "type": "string",
          "description": "Image address ."
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Image pull policy: Always, Never and IfNotExists."
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Container command to be called when container is instantiated."
        },
        "environment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ContainerEnvironment"
          },
          "description": "Container environment variables."
        },
        "requests": {
          "$ref": "#/definitions/v1ContainerResources",
          "description": "Container resources request (cpu/memory)."
        },
        "limits": {
          "$ref": "#/definitions/v1ContainerResources",
          "description": "Container resources limits (cpu/memory)."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ContainerPort"
          },
          "description": "Container exposed ports definitions."
        }
      },
      "description": "Container is the struct that defines a game room container configuration."
    },
    "v1ContainerEnvironment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Container environment variable name."
        },
        "value": {
          "type": "string",
          "description": "Container environment variable value."
        }
      },
      "description": "Container environment variables."
    },
    "v1ContainerPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the exposed port."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol used to expose the port (TCP, UDP, SCTP)."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number used."
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "description": "Optional container host port."
        }
      },
      "description": "Container exposed port definition."
    },
    "v1ContainerResources": {
      "type": "object",
      "properties": {
        "memory": {
          "type": "string",
          "description": "Container memory amount."
        },
        "cpu": {
          "type": "string",
          "description": "Container cpu amount."
        }
      },
      "description": "Container resources (cpu/memory) (request and limits)."
    },
    "v1CreateSchedulerRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique identifier for the scheduler."
        },
        "game": {
          "type": "string",
          "description": "Game the new scheduler will be part of."
        },
        "version": {
          "type": "string",
          "description": "?."
        },
        "terminationGracePeriod": {
          "type": "string",
          "format": "int64",
          "description": "The game room termination grace period."
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "description": "The container object array defines all the game room container configurations."
        },
        "portRange": {
          "$ref": "#/definitions/v1PortRange",
          "description": "The port range object describes what is the port range used to allocate game rooms."
        },
        "toleration": {
          "type": "string",
          "description": "Runtime game room toleration configuration."
        },
        "affinity": {
          "type": "string",
          "description": "Runtime game room affinity configuration."
        },
        "maxSurge": {
          "type": "string",
          "title": "The max surge of new rooms, used to scale and update"
        }
      },
      "description": "Scheduler is the struct that defines a maestro scheduler."
    },
    "v1CreateSchedulerResponse": {
      "type": "object",
      "properties": {
        "scheduler": {
          "$ref": "#/definitions/v1Scheduler",
          "description": "Scheduler that was created."
        }
      },
      "description": "Response for the create scheduler."
    },
    "v1GetSchedulerResponse": {
      "type": "object",
      "properties": {
        "scheduler": {
          "$ref": "#/definitions/v1Scheduler",
          "description": "List of schedulers fetched."
        }
      },
      "description": "The list schedulers reponse message."
    },
    "v1ListSchedulersResponse": {
      "type": "object",
      "properties": {
        "schedulers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SchedulerWithoutSpec"
          },
          "description": "List of schedulers fetched."
        }
      },
      "description": "The list schedulers reponse message."
    },
    "v1PortRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "Range start, it is inclusive."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "Range end, it is exclusive."
        }
      },
      "description": "Port range is the range definition that the rooms will use. If a scheduler\ndefines its range as 0-1000 (start-end), it is guarantee that all rooms be\nwithin this range."
    },
    "v1RemoveRoomsResponse": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Remove rooms operation ID, further this id can be used to consult its state."
        }
      },
      "description": "Remove rooms operation response payload."
    },
    "v1Scheduler": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is an unique identifier for the scheduler."
        },
        "game": {
          "type": "string",
          "description": "Game is the \"scope\" where the scheduler will be placed. It is required, and\ngames name are unique."
        },
        "state": {
          "type": "string",
          "description": "Current state of the scheduler."
        },
        "version": {
          "type": "string",
          "description": "Scheduler current version."
        },
        "portRange": {
          "$ref": "#/definitions/v1PortRange",
          "description": "Port range for the scheduler rooms."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the scheduler was created."
        },
        "maxSurge": {
          "type": "string",
          "title": "Max surge of rooms"
        },
        "spec": {
          "$ref": "#/definitions/v1Spec",
          "title": "GameRoom spec"
        }
      },
      "description": "Scheduler definition."
    },
    "v1SchedulerWithoutSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is an unique identifier for the scheduler."
        },
        "game": {
          "type": "string",
          "description": "Game is the \"scope\" where the scheduler will be placed. It is required, and\ngames name are unique."
        },
        "state": {
          "type": "string",
          "description": "Current state of the scheduler."
        },
        "version": {
          "type": "string",
          "description": "Scheduler current version."
        },
        "portRange": {
          "$ref": "#/definitions/v1PortRange",
          "description": "Port range for the scheduler rooms."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the scheduler was created."
        },
        "maxSurge": {
          "type": "string",
          "title": "Max surge of rooms"
        }
      },
      "title": "Scheduler message used in the \"ListScheduler version\" definition. The \"spec\" is not implemented\non this message since it's unecessary for the list function"
    },
    "v1Spec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "GameRoom.spec version"
        },
        "terminationGracePeriod": {
          "type": "string",
          "format": "int64",
          "description": "The game room termination grace period."
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Container"
          },
          "description": "The container object array defines all the game room container configurations."
        },
        "toleration": {
          "type": "string",
          "description": "Runtime game room toleration configuration."
        },
        "affinity": {
          "type": "string",
          "description": "Runtime game room affinity configuration."
        }
      },
      "title": "Spec is the specifications of the scheduler, with relevant info about what is being used"
    }
  }
}
