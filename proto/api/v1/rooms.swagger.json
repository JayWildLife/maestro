{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/rooms.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RoomsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/scheduler/{schedulerName}/rooms/{roomName}/ping": {
      "post": {
        "summary": "Updates a game room with ping data.",
        "operationId": "RoomsService_UpdateRoomWithPing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRoomWithPingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Target scheduler name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roomName",
            "description": "Target room name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Target room metadata."
                },
                "status": {
                  "type": "string",
                  "description": "Indicates the room status."
                },
                "timestamp": {
                  "type": "string",
                  "format": "int64",
                  "description": "Timestamp of the ping event."
                }
              },
              "description": "The ping request."
            }
          }
        ],
        "tags": [
          "RoomsService"
        ]
      }
    },
    "/scheduler/{schedulerName}/rooms/{roomName}/playerevent": {
      "post": {
        "summary": "Forward the incoming player event.",
        "operationId": "RoomsService_ForwardPlayerEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForwardPlayerEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Target scheduler name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roomName",
            "description": "Target room name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Player event metadata."
                },
                "event": {
                  "type": "string",
                  "description": "The player event name."
                },
                "timestamp": {
                  "type": "string",
                  "format": "int64",
                  "description": "Timestamp of the player event."
                }
              },
              "description": "The player event request."
            }
          }
        ],
        "tags": [
          "RoomsService"
        ]
      }
    },
    "/scheduler/{schedulerName}/rooms/{roomName}/roomevent": {
      "post": {
        "summary": "Forward the incoming room event.",
        "operationId": "RoomsService_ForwardRoomEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForwardRoomEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Target scheduler name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roomName",
            "description": "Target room name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Room event metadata."
                },
                "event": {
                  "type": "string",
                  "description": "The room event name."
                },
                "timestamp": {
                  "type": "string",
                  "format": "int64",
                  "description": "Timestamp of the room event."
                }
              },
              "description": "The room event request."
            }
          }
        ],
        "tags": [
          "RoomsService"
        ]
      }
    },
    "/scheduler/{schedulerName}/rooms/{roomName}/status": {
      "put": {
        "summary": "Noop endpoint created for maintaining compatibility with previous maestro version (v9).",
        "operationId": "RoomsService_NoopUpdateRoomStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NoopUpdateRoomStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "schedulerName",
            "description": "Target scheduler name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roomName",
            "description": "Target room name.\nNOTE: On http protocol, this operates as a path param.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Status update metadata."
                },
                "status": {
                  "type": "string",
                  "description": "The room status."
                },
                "timestamp": {
                  "type": "string",
                  "format": "int64",
                  "description": "Timestamp of the status update."
                }
              },
              "description": "The player event request."
            }
          }
        ],
        "tags": [
          "RoomsService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ForwardPlayerEventResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Flag indicating if the forward process was successful or not"
        },
        "message": {
          "type": "string",
          "title": "Message from forwarding response (currently always blank)"
        }
      },
      "description": "The player event response."
    },
    "v1ForwardRoomEventResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Flag indicating if the forward process was successful or not"
        },
        "message": {
          "type": "string",
          "title": "Message from forwarding response (currently always blank)"
        }
      },
      "description": "The room event response."
    },
    "v1NoopUpdateRoomStatusResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Flag indicating if the status update process was successful or not"
        }
      },
      "description": "The player event response."
    },
    "v1UpdateRoomWithPingResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the ping update succeeded or not."
        }
      },
      "description": "The ping response."
    }
  }
}
