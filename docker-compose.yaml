# to run define K3S_TOKEN, K3S_VERSION is optional, eg:
#   K3S_TOKEN=${RANDOM}${RANDOM}${RANDOM} docker-compose up

version: '3'
services:

  k3s_server:
    image: "rancher/k3s:v1.19.11-k3s1"
    command: server
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
    - K3S_TOKEN=maestro
    - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
    - K3S_KUBECONFIG_MODE=666
    volumes:
    - k3s-server:/var/lib/rancher/k3s
    # This is just so that we get the kubeconfig file out
    - .:/output
    ports:
    - 6443:6443  # Kubernetes API Server
    - 80:80      # Ingress controller port 80
    - 443:443    # Ingress controller port 443

  k3s_agent:
    image: "rancher/k3s:v1.19.11-k3s1"
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
    - K3S_URL=https://server:6443
    - K3S_TOKEN=maestro

  postgres:
    image: postgres:9.6.9
    ports:
    - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql
    environment:
    - POSTGRES_DB=maestro
    - POSTGRES_USER=maestro
    - POSTGRES_PASSWORD=maestro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:5.0.10-alpine
    ports:
    - "6379:6379"

  worker:
    build:
      context: .
      dockerfile: ./docker/worker/Dockerfile
      args:
        CONFIG_FILE_PATH: "config/worker_container.local.yaml"
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy

  rooms-api:
    build:
      context: .
      dockerfile: ./docker/rooms-api/Dockerfile
      args:
        CONFIG_FILE_PATH: "config/rooms-api_container.local.yaml"
    ports:
      - "8090:8090"

  management-api:
    build:
      context: .
      dockerfile: ./docker/management-api/Dockerfile
      args:
        CONFIG_FILE_PATH: "config/management-api_container.local.yaml"
    #    command: ["./utils", "migrate"]
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  k3s-server: {}
  postgres: {}
